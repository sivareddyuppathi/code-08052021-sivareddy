package com.chalange.bmi.helper;

import org.json.JSONArray;
import org.json.JSONObject;

import com.chalange.bmi.constants.AppConstants;
import com.chalange.bmi.model.Persion;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

public class CheckBMI {

	private final static String json = "[\n" + "  {\n" + "    \"gender\": \"Male\",\n" + "    \"heightCm\": 171,\n"
			+ "    \"weightKg\": 96\n" + "  },\n" + "  {\n" + "    \"gender\": \"Male\",\n" + "    \"heightCm\": 161,\n"
			+ "    \"weightKg\": 85\n" + "  },\n" + "  {\n" + "    \"gender\": \"Male\",\n" + "    \"heightCm\": 180,\n"
			+ "    \"weightKg\": 77\n" + "  },\n" + "  {\n" + "    \"gender\": \"Female\",\n"
			+ "    \"heightCm\": 166,\n" + "    \"weightKg\": 62\n" + "  },\n" + "  {\n"
			+ "    \"gender\": \"Female\",\n" + "    \"heightCm\": 150,\n" + "    \"weightKg\": 70\n" + "  },\n"
			+ "  {\n" + "    \"gender\": \"Female\",\n" + "    \"heightCm\": 167,\n" + "    \"weightKg\": 82\n"
			+ "  }\n" + "]";

	public static void main(String[] args) {

		final ObjectMapper objectMapper = new ObjectMapper();

		int totalOverWeightPeople = 0;

		try {
			Persion[] persion = objectMapper.readValue(json, Persion[].class);
			for (Persion p : persion) {
				double bmi = calculateBMI(p);
				String s = healthCondition(bmi, totalOverWeightPeople);
			}
			System.out.println(totalOverWeightPeople);

		} catch (JsonProcessingException e) {
			e.printStackTrace();
		}
	}

	private static String healthCondition(double bmi, int totalOverWeightPeople) {
		if (bmi < 18.5) {
			return AppConstants.underWeight;
		} else if (bmi >= 18.5 && bmi <= 24.9) {
			return AppConstants.normalWeight;
		} else if (bmi >= 25 && bmi <= 29.9) {
			System.out.println(totalOverWeightPeople);
			totalOverWeightPeople++; //track of overweight people...
			return AppConstants.overWeight;
		} else if (bmi >= 30 && bmi <= 34.9) {
			return AppConstants.moderatelyObese;
		} else if (bmi >= 35 && bmi <= 39.9) {
			return AppConstants.severelyObese;
		} else { // 40 and above
			totalOverWeightPeople++;
			return AppConstants.vSeverelyObese;
		}
	}

	private static double calculateBMI(Persion p) {
		double heightInMeters = convertCmToMeters(p.getHeightCm()); // convert Cm to meters...
		System.out.println(p.getWeightKg() / heightInMeters);
		return (p.getWeightKg() / heightInMeters);
	}

	private static double convertCmToMeters(double heightCm) {

		return (heightCm / 100.0); // formule to convert Cm to meters (cm/100)
	}

}
